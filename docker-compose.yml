
services:

  # database service
  db:
    image: postgres
    container_name: pulsar-postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pulsar-db-ps
      POSTGRES_DB: postgres
    volumes:
      - ./data:/data/postgres
    ports:
      - "5432:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"
      # - "host.docker.internal:127.0.0.1"
    networks:
      - my-network


  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080


  # application service
  panel:
    build: "./"
    container_name: pulsar
    restart: always
    volumes:
      - .:/src
    ports:
      - "3000:3000"
    networks:
      - my-network
    environment:
      ACCESS_TOKEN: g4rren-dansukdfrang
      POOL_TOKEN: g4rren-sdffg
      DATABASE_URL: postgresql://postgres:pulsar-db-ps@db:5432/postgres?schema=postgres
      SOCKET_URL: wss://138.0.172.170/socket
      BASE_API_URL: https://138.0.172.170/pulsar/api


networks:
  my-network:
    # external: true
    driver: bridge




  # # socket service
  # socket:
  #   build: "../pulsar-socket"
  #   container_name: pulsar-socket
  #   restart: always
  #   volumes:
  #     - .:/src
  #   ports:
  #    - "3001:3001"
  #   links:
  #     - db
  #   depends_on:
  #     - db
  #   # comand: npm run start
  #   environment:
  #     PORT: 3001
  #     ACCESS_TOKEN: g4rren-dansukdfrang
  #     POOL_TOKEN: g4rren-sdffg
  #     DATABASE_URL: postgresql://postgres:pulsar-db-ps@db:5432/postgres?schema=postgres